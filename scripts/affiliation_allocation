#!/usr/bin/env python2

# Copyright (C) 2017 East Asian Observatory
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful,but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc.,51 Franklin
# Street, Fifth Floor, Boston, MA  02110-1301, USA

"""
affiliation_allocation - Export affiliation allocations from Hedwig database

Usage:
    affiliation-allocation [-v | -q] --semester <semester> --queue <queue> --type <type>

Options:

    --semester <semester>             Semester code
    --queue <queue>                   Queue code
    --type <type>                     Call type code
    --verbose, -v                     Increase verbosity
    --quiet, -q                       Decreate verbosity
"""

from __future__ import absolute_import, division, print_function, \
    unicode_literals

from codecs import utf_8_decode
import logging
import sys

from docopt import docopt

from hedwig.config import get_database, get_facilities
from hedwig.error import NoSuchValue
from hedwig.util import get_logger

from hedwig2omp.config import get_config


def main():
    args = docopt(__doc__)

    telescope = 'JCMT'

    logging.basicConfig(level=(logging.DEBUG if args['--verbose']
                               else (logging.WARNING if args['--quiet']
                                     else logging.INFO)))

    logger = get_logger('affiliation_allocation')

    logger.debug('Reading configuration')
    config = get_config()

    logger.debug('Connecting to Hedwig database')
    db = get_database()
    (facility_class,) = get_facilities(facility_spec=telescope)
    facility_id = db.ensure_facility(facility_class.get_code())
    facility = facility_class(facility_id)

    try:
        call_type = facility.get_call_types().by_code(args['--type'])
    except NoSuchValue:
        logger.error('Type "{}" not recognised', args['--type'])
        sys.exit(1)

    semester_code = utf_8_decode(args['--semester'])[0]
    queue_code = utf_8_decode(args['--queue'])[0]

    logger.debug('Finding call')
    call = db.search_call(
        facility_id=facility_id, type_=call_type,
        queue_code=queue_code, semester_code=semester_code).get_single()

    # Replicate logic from hedwig.facility.jcmt.view._get_proposal_tabulation.
    logger.debug('Getting time available')
    available = db.search_jcmt_available(
        call_id=call.id).get_total().total_non_free

    logger.debug('Getting affiliations')
    affiliations = db.search_affiliation(
        queue_id=call.queue_id, hidden=False, with_weight_call_id=call.id)

    for affiliation in affiliations.values():
        if affiliation.weight is not None:
            for affiliation_code in config.options('affiliation_code'):
                if affiliation.name == config.get(
                        'affiliation_code', affiliation_code):
                    print('{},{},{}'.format(
                        args['--semester'],
                        affiliation_code,
                        (available * affiliation.weight / 100.0)))
                    break
            else:
                logger.error('Unknown affiliation "{}"', affiliation.name)
                sys.exit(1)


if __name__ == '__main__':
    main()
